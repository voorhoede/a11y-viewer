:root {
    --moderate-blur: 1px;
    --severe-blur: 15px;

    --control-height: 2.5rem;

    --color-grey-light: #e8ecec;
    --color-grey: #d3d3d3;
    --color-grey-dark: #ccd5d7;
    --color-blue-lighter: #61b7ff;
    --color-blue: #375055;
    --color-blue-dark: #1b363b;
}

*, :after, :before {
    box-sizing: border-box;
}

html, body {
    height: 100%;
}

body {
    display: flex;
    flex-direction: column;
    margin: 0;
    font-family: sans-serif;
}

button,
input,
optgroup,
select {
    /* Use parent font-size (instead of browser default 11px) */
    font-size: inherit;
    /* Remove the margin in Firefox and Safari */
    margin: 0;
}

/* firefox button height issue */
/* https://davidwalsh.name/firefox-buttons */
button::-moz-focus-inner {
    border: 0;
    padding: 0;
}

a:focus,
button:focus,
input:focus,
select:focus {
    outline: 2px solid var(--color-blue-lighter);
}

/* a11y */
.a11y-sr-only {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/* buttons */

.button {
    display: inline-block;
    height: var(--control-height);
    padding: 0 1em;
    background-color: var(--color-grey-light);
    border: 1px solid transparent;
    text-decoration: none;
    text-align: center;
    font-weight: bold;
    color: var(--color-blue-dark);
    box-shadow: 0 0 3px rgba(0, 0, 0, 0.2);
}

.button:hover {
    transition: all 0.2s ease-in;
    background-color: var(--color-grey-dark);
    cursor: pointer;
}

/* checkbox */
input[type="checkbox"] {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

input[type="checkbox"] ~ .label-text {
    cursor: pointer;
}

input[type="checkbox"] ~ .label-text:before {
    content: '';
    display: inline-block;
    height: 1.125rem;
    width: 1.125rem;
    border: 2px solid var(--color-blue);
    border-radius: 2px;
    margin-right: 0.5rem;
    vertical-align: -0.25em;
    transition: border-color 250ms ease;
}

input[type="checkbox"]:hover ~ .label-text:before {
    border: 2px solid var(--color-blue-lighter);
}

input[type="checkbox"]:checked ~ .label-text:before {
    background-image: url('data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2214%22%20height%3D%2214%22%20viewBox%3D%220%200%2014%2014%22%3E%3Cpath%20fill%3D%22%231A4E57%22%20d%3D%22M5.86%2012.36L1.3%207.16%203%205.13l2.56%202.92%205.3-6.64%201.87%202-6.87%208.94z%22%2F%3E%3C%2Fsvg%3E');
    background-repeat: no-repeat;
}

/* input[type="text"] */

input[type="text"] {
    border: 1px solid var(--color-grey-light);
    padding: 0.5rem;
}

/* header */
.app-header {
    display: none; /* hide when not enhanced */
    padding: 0.25rem;
    background-color: var(--color-grey);
    border-bottom: 1px solid var(--color-grey-dark);
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
    line-height: 2.5;
}

.is-enhanced .app-header {
    display: block;
    flex: 0 1 auto;
}

.update-browser {
    display: block;
    flex: 0 1 auto;
    padding: 1rem;
    background: #EBC6B9;
}

.is-enhanced .update-browser {
    display: none;
}

form {
    display: none;
}

.is-open form {
    display: block;
}

.is-open form > *:not(:last-child) {
    margin-bottom: 0.5rem;
}

/* select */
.select-input {
    height: var(--control-height); /* line-height has no effect on replaced elements */
    appearance: none;
    background-color: var(--color-grey-light);
    border: 1px solid transparent;
    border-radius: 0;
    box-shadow: 0 0 3px rgba(0, 0, 0, 0.2);
    padding-right: 2.5rem; /* make space for caret icon */
    padding-left: 1rem;
    width: 100%;
}

.select-input:hover {
    transition: all 0.2s ease-in;
    background-color: var(--color-grey-dark);
    cursor: pointer;
}

.select-label {
    display: block;
    height: var(--control-height);
    position: relative; /* for absolute position of caret */
    background-color: #ccd5d7;
    cursor: pointer;
}

.select-label .select-icon {
    pointer-events: none;
    position: absolute;
    height: 2.25rem;
    width: 2.5rem;
    top: 0.125rem;
    right: 0;
    text-align: center;
    line-height: 2.375rem;
}

.select-icon:before {
    content: '';
    display: inline-block;
    height: 1.25rem;
    width: 1.25rem;
    vertical-align: -.5rem;
    background-image: url('data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2024%2024%22%3E%3Cpath%20d%3D%22M18.035%207.37c.406%200%20.754.146%201.043.435l.598.598-7.688%207.688-7.664-7.675.598-.61c.28-.296.625-.444%201.03-.444s.755.146%201.044.435L12%2012.787l4.992-4.98c.29-.29.637-.436%201.043-.436z%22%2F%3E%3C%2Fsvg%3E');
    background-repeat: no-repeat;
}

main {
    display: block; /* IE10 fix, otherwise no styles are applied */
    flex: 1 1 auto;
    position: relative; /* for absolute position of main.is-disabled:before */
    overflow: hidden; /* prevent scrolling on .app-header */
}

main.is-disabled {
    user-select: none; /* prevent selecting text */
}

main.is-disabled:before {
    /* put a blocking layer on top for browsers not supporting pointer-events: none */
    content: '';
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1;
    cursor: not-allowed;
}

iframe {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    border: none;
    /* somehow we also need to set width and height to 100% to stretch iframe to its container */
    width: 100%;
    height: 100%;
    border: 0;
}

/* a11y toggler */
.toggle-controls {
    text-align: right;
    height: var(--control-height);
}

.is-open .toggle-controls {
    margin-bottom: 0.5rem;
}

.toggle-controls-icon {
    vertical-align: middle;
}

.toggle-controls .button {
    padding-right: 0.25rem;
    padding-left: 0.25rem;
}

.is-open .toggle-controls-button-open {
    display: none;
}

.toggle-controls-button-close {
    display: none;
}

.is-open .toggle-controls-button-close {
    display: inline-block;
}

.url-navigator {
    display: flex;
}

.url-navigator-input {
    flex: 1 1 auto;
    height: var(--control-height);
}

.url-navigator-submit {
    flex: 0 1 auto;
    max-width: 4rem;
    overflow: hidden;
}

/* filters */

/* moderate visual impairment combinations */
.moderate {
    filter: blur(var(--moderate-blur));
}
.moderate.no-red {
    filter: url('svg-filters.svg#protanopia')  blur(var(--moderate-blur));
}
.moderate.low-red {
    filter: url('svg-filters.svg#protanomaly') blur(var(--moderate-blur));
}
.moderate.no-green {
    filter: url('svg-filters.svg#deuteranopia') blur(var(--moderate-blur));
}
.moderate.low-green {
    filter: url('svg-filters.svg#deuteranomaly') blur(var(--moderate-blur));
}
.moderate.no-blue {
    filter: url('svg-filters.svg#tritanopia') blur(var(--moderate-blur));
}
.moderate.low-blue {
    filter: url('svg-filters.svg#tritanomaly') blur(var(--moderate-blur));
}
.moderate.no-color {
    filter: url('svg-filters.svg#achromatopsia') blur(var(--moderate-blur));
}
.moderate.almost-no-color {
    filter: url('svg-filters.svg#achromatomaly') blur(var(--moderate-blur));
}

/* severe visual impairment combinations */
.severe {
   filter: blur(var(--severe-blur));
}
.severe.no-red {
    filter: url('svg-filters.svg#protanopia') blur(var(--severe-blur));
}
.severe.low-red {
    filter: url('svg-filters.svg#protanomaly') blur(var(--severe-blur));
}
.severe.no-green {
    filter: url('svg-filters.svg#deuteranopia') blur(var(--severe-blur));
}
.severe.low-green {
    filter: url('svg-filters.svg#deuteranomaly') blur(var(--severe-blur));
}
.severe.no-blue {
    filter: url('svg-filters.svg#tritanopia') blur(var(--severe-blur));
}
.severe.low-blue {
    filter: url('svg-filters.svg#tritanomaly') blur(var(--severe-blur));
}
.severe.no-color {
    filter: url('svg-filters.svg#achromatopsia') blur(var(--severe-blur));
}
.severe.almost-no-color {
    filter: url('svg-filters.svg#achromatomaly') blur(var(--severe-blur));
}

/* blindness combinations */
.blindness {
    filter: brightness(0);
}
.blindness.no-red {
    filter: url('svg-filters.svg#protanopia') brightness(0);
}
.blindness.low-red {
    filter: url('svg-filters.svg#protanomaly') brightness(0);
}
.blindness.no-green {
    filter: url('svg-filters.svg#deuteranopia') brightness(0);
}
.blindness.low-green {
    filter: url('svg-filters.svg#deuteranomaly') brightness(0);
}
.blindness.no-blue {
    filter: url('svg-filters.svg#tritanopia') brightness(0);
}
.blindness.low-blue {
    filter: url('svg-filters.svg#tritanomaly') brightness(0);
}
.blindness.no-color {
    filter: url('svg-filters.svg#achromatopsia') brightness(0);
}
.blindness.almost-no-color {
    filter: url('svg-filters.svg#achromatomaly') brightness(0);
}

/* color blindness variations */
.no-red {
    filter: url('svg-filters.svg#protanopia');
}
.low-red {
    filter: url('svg-filters.svg#protanomaly');
}
.no-green {
    filter: url('svg-filters.svg#deuteranopia');
}
.low-green {
    filter: url('svg-filters.svg#deuteranomaly');
}
.no-blue {
    filter: url('svg-filters.svg#tritanopia');
}
.low-blue {
    filter: url('svg-filters.svg#tritanomaly');
}
.no-color {
    filter: url('svg-filters.svg#achromatopsia');
}
.almost-no-color {
    filter: url('svg-filters.svg#achromatomaly');
}


@media screen and (min-width: 768px) {

    .select-label {
        float: left;
        width: 50%;
    }

    .select-label:last-of-type {
        padding-left: 0.5rem;
    }
}


@media screen and (min-width: 1055px) {
    .toggle-controls {
        display: none;
    }

    form,
    .is-open form {
        display: flex;
    }

    form > * {
        flex: 0 1 auto;
    }

    form > * + * {
        margin-left: 0.5rem;
    }

    .is-open form > *:not(:last-child) {
        margin-bottom: 0;
    }

    .select-label {
        float: none;
        width: auto;
    }

    .select-label:last-of-type {
        padding-left: 0;
    }

    .url-navigator {
        flex: 1 1 auto;
    }
}

